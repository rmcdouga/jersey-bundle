<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com._4point.aem.wrapper</groupId>
	<artifactId>jersey-bundle</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Jersey OSGi Bundle</name>
	<description>Jersey JAX-RS Packaged as an OSGi Bundle.  Based on io.wcm.wrapper.jersey project.</description>
	<packaging>bundle</packaging>

	<properties>
		<pkgVersion>2.27</pkgVersion>
		<osgiVersion>${pkgVersion}</osgiVersion>
	</properties>

	<licenses>
		<license>
			<name>Eclipse Public License - v 2.0</name>
			<url>https://www.eclipse.org/legal/epl-2.0/</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<dependencies>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>${pkgVersion}</version>
			<exclusions>
				<exclusion>
					<groupId>org.glassfish.hk2.external</groupId>
					<artifactId>javax.inject</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${pkgVersion}</version>
			<exclusions>
				<exclusion>
					<groupId>org.glassfish.hk2.external</groupId>
					<artifactId>javax.inject</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${pkgVersion}</version>
			<exclusions>
				<exclusion>
					<groupId>org.glassfish.hk2.external</groupId>
					<artifactId>javax.inject</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>${pkgVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-bean-validation</artifactId>
			<version>${pkgVersion}</version>
			<exclusions>
				<exclusion>
					<groupId>org.glassfish.hk2.external</groupId>
					<artifactId>javax.inject</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-validator</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.el</groupId>
					<artifactId>javax.el-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.glassfish.web</groupId>
					<artifactId>javax.el</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.inject</groupId>
			<artifactId>jersey-hk2</artifactId>
			<version>${pkgVersion}</version>
			<exclusions>
				<exclusion>
					<groupId>org.glassfish.hk2.external</groupId>
					<artifactId>javax.inject</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
	      <groupId>javax.servlet</groupId>
	      <artifactId>javax.servlet-api</artifactId>
	      <version>4.0.1</version>
	      <scope>provided</scope>
    	</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>4.1.0</version>
				<extensions>true</extensions>
				<executions>
					<!-- Configure extra execution of 'manifest' in process-classes phase to make sure SCR metadata is generated before unit test runs -->
					<execution>
						<id>scr-metadata</id>
						<goals>
							<goal>manifest</goal>
						</goals>
						<configuration>
							<supportIncrementalBuild>true</supportIncrementalBuild>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<exportScr>true</exportScr>
					<instructions>
						<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
						<Bundle-Description>${project.description} (Rev. ${buildNumber} at ${timestamp})</Bundle-Description>
						<!-- Enable processing of OSGI DS component annotations -->
						<_dsannotations>*</_dsannotations>
						<!-- Enable processing of OSGI metatype annotations -->
						<_metatypeannotations>*</_metatypeannotations>
						<_plugin>
							<!-- Support parsing of maven-scr-plugin annotations through the felix.scr.bnd plugin -->
							org.apache.felix.scrplugin.bnd.SCRDescriptorBndPlugin;destdir=${project.build.outputDirectory},
							<!-- Generate bundle header containing all configuration annotation classes -->
							org.apache.sling.caconfig.bndplugin.ConfigurationClassScannerPlugin,
							<!-- Generate bundle header for Sling Models classes -->
							org.apache.sling.bnd.models.ModelsScannerPlugin
						</_plugin>
						<!-- Do not inline jars, include as jar files -->
						<Embed-Dependency>
							*;scope=compile|runtime;inline=false;groupId=org.glassfish.jersey.*,
							*;scope=compile|runtime;inline=false;groupId=org.glassfish.hk2.*,
							*;scope=compile|runtime;inline=false;groupId=org.javassist,
							*;scope=compile|runtime;inline=false;groupId=org.jvnet.mimepull
						</Embed-Dependency>
						<Embed-Transitive>true</Embed-Transitive>
						<!-- use _exportcontents instead of Export-Package to avoid conflict 
							with Embed-Dependency an inline=true -->
						<_exportcontents>
							org.glassfish.jersey.*;version=${osgiVersion}
						</_exportcontents>
						<Import-Package>
							javax.persistence.*;resolution:=optional,
							javax.servlet.annotation.*;resolution:=optional,
							com.sun.*;resolution:=optional,
							sun.misc.*;resolution:=optional,
							jersey.repackaged.com.google.common.cache.LocalCache.jersey.repackaged.com.google.common.cache.*;resolution:=optional,
							jersey.repackaged.com.google.common.collect.AbstractMapBasedMultimap.jersey.repackaged.com.google.common.collect.*;resolution:=optional,
							jersey.repackaged.com.google.common.collect.ImmutableMultiset.jersey.repackaged.com.google.common.collect.*;resolution:=optional,
							jersey.repackaged.com.google.common.collect.MapMakerInternalMap.jersey.repackaged.com.google.common.collect.*;resolution:=optional,
							jersey.repackaged.com.google.common.collect.StandardTable.jersey.repackaged.com.google.common.collect.*;resolution:=optional,
							jersey.repackaged.com.google.common.collect.AbstractMultimap.jersey.repackaged.com.google.common.collect;resolution:=optional,
							jersey.repackaged.com.google.common.collect.FilteredKeyMultimap.jersey.repackaged.com.google.common.collect;resolution:=optional,
							jersey.repackaged.com.google.common.collect.ImmutableMultimap.jersey.repackaged.com.google.common.collect;resolution:=optional,
							jersey.repackaged.com.google.common.collect.Maps$FilteredEntryMap.jersey.repackaged.com.google.common.collect;resolution:=optional,
							*
						</Import-Package>
					</instructions>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.felix</groupId>
						<artifactId>org.apache.felix.scr.bnd</artifactId>
						<version>1.8.0</version>
					</dependency>
					<dependency>
						<groupId>org.apache.felix</groupId>
						<artifactId>org.apache.felix.scr.generator</artifactId>
						<version>1.17.0</version>
					</dependency>
					<dependency>
						<groupId>org.apache.felix</groupId>
						<artifactId>org.apache.felix.scr.annotations</artifactId>
						<version>1.11.0</version>
					</dependency>
					<dependency>
						<groupId>org.apache.sling</groupId>
						<artifactId>org.apache.sling.caconfig.bnd-plugin</artifactId>
						<version>1.0.2</version>
					</dependency>
					<dependency>
						<groupId>org.apache.sling</groupId>
						<artifactId>org.apache.sling.bnd.models</artifactId>
						<version>1.0.0</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- generate build number and build timestamp -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
							<goal>create-timestamp</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
					<getRevisionOnlyOnce>true</getRevisionOnlyOnce>
					<format>{0}</format>
					<shortRevisionLength>8</shortRevisionLength>
					<items>
						<item>scmVersion</item>
					</items>
					<timestampFormat>{0,date,yyyy-MM-dd HH:mm:ss}</timestampFormat>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>